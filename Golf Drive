%matplotlib inline 
'''
Maximum range calculation
'''
import numpy as np
import matplotlib.pylab as plt
import math as math

def C(v):
    if v <= 14:
        return 0.5
    else:
        return 7./v
    
v_init = 70 # m/s
g = 9.8
dt = 0.01
nsteps = 1000
angles = np.array([1,5,9,13,17])
#angles = np.array([5, 10, 15, 20])
rho = 1.225
r_golfball = 42.7/2.            # mm
A = np.pi*(r_golfball/1000.)**2 
m = 45.93/1000.
magnus_constant = 0.25

plt.figure(figsize = (10,10))
# for the dimpled balls
for theta in angles:
    x = np.zeros(nsteps)    # I'm not sure how to do the magnus force with a single r or v array
    y = np.zeros(nsteps)
    x[0] = 0
    y[0] = 0
    v_x = np.zeros(nsteps)
    v_y = np.zeros(nsteps)
    v_x[0] = v_init*np.cos(math.radians(theta))
    v_y[0] = v_init*np.sin(math.radians(theta))
    for i in range(nsteps - 1):
        v = np.sqrt(v_x[i]**2+v_y[i]**2)    # magnitude of the velocity at that point
        v_x[i+1] = v_x[i] - C(v)*A*rho*v*v_x[i]*dt/m - magnus_constant*v_y[i]*dt
        v_y[i+1] = v_y[i] - g*dt - C(v)*A*rho*v*v_y[i]*dt/m + magnus_constant*v_x[i]*dt
        x[i+1] = x[i] + v_x[i]*dt
        y[i+1] = y[i] + v_y[i]*dt
    plt.plot(x[y>0], y[y>0], label = r'$\theta $ = '+str(theta)+r'$^{\circ }$')

plt.legend()
plt.xlabel('x [m]', size = 12)
plt.ylabel('y [m]', size = 12)
plt.title('Max Distance', size = 16)
plt.show()
